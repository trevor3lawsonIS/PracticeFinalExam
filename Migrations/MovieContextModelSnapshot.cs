// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PracticeFinalExam.Models;

namespace PracticeFinalExam.Migrations
{
    [DbContext(typeof(MovieContext))]
    partial class MovieContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.20");

            modelBuilder.Entity("PracticeFinalExam.Models.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CategoryName")
                        .HasColumnType("TEXT");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryID = 1,
                            CategoryName = "Action/Adventure"
                        },
                        new
                        {
                            CategoryID = 2,
                            CategoryName = "Romance"
                        },
                        new
                        {
                            CategoryID = 3,
                            CategoryName = "Rom/Com"
                        },
                        new
                        {
                            CategoryID = 4,
                            CategoryName = "Comedy"
                        },
                        new
                        {
                            CategoryID = 5,
                            CategoryName = "Drama"
                        },
                        new
                        {
                            CategoryID = 6,
                            CategoryName = "Family"
                        },
                        new
                        {
                            CategoryID = 7,
                            CategoryName = "Horror/Suspense"
                        },
                        new
                        {
                            CategoryID = 8,
                            CategoryName = "Miscellaneous"
                        },
                        new
                        {
                            CategoryID = 9,
                            CategoryName = "Television"
                        },
                        new
                        {
                            CategoryID = 10,
                            CategoryName = "VHS"
                        });
                });

            modelBuilder.Entity("PracticeFinalExam.Models.Movie", b =>
                {
                    b.Property<int>("MovieID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Director")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Edited")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Lent_To")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT")
                        .HasMaxLength(25);

                    b.Property<string>("Rating")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("MovieID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            MovieID = 1,
                            CategoryID = 1,
                            Director = "Christopher Nolan",
                            Edited = false,
                            Lent_To = "Josh",
                            Notes = "Great Movie",
                            Rating = "PG-13",
                            Title = "The Dark Knight",
                            Year = 2013
                        },
                        new
                        {
                            MovieID = 2,
                            CategoryID = 3,
                            Director = "Some Guy",
                            Edited = false,
                            Lent_To = "Ashley",
                            Notes = "Funny Movie",
                            Rating = "PG-13",
                            Title = "Crazy Stupid Love",
                            Year = 2013
                        },
                        new
                        {
                            MovieID = 3,
                            CategoryID = 1,
                            Director = "Tom Cruise",
                            Edited = false,
                            Lent_To = "Me",
                            Notes = "The Best Movie",
                            Rating = "PG-13",
                            Title = "Top Gun Maverick",
                            Year = 2022
                        });
                });

            modelBuilder.Entity("PracticeFinalExam.Models.Movie", b =>
                {
                    b.HasOne("PracticeFinalExam.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
